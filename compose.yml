name: bankapp

services:
  xchanger:
    build: ./xchanger
    container_name: xchanger
    env_file:
      - ".env"
    ports:
      - "${XCHANGER_SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - back-tier
      - db-tier

  user:
    build: ./mainframe/user
    container_name: users
    env_file:
      - ".env"
    ports:
      - "${USER_SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - back-tier
      - db-tier
  
  account:
    build: ./mainframe/account
    container_name: accounts
    env_file:
      - ".env"
    ports:
      - "${ACCOUNT_SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      user:
        condition: service_started
      mongo:
        condition: service_healthy
    networks:
      - back-tier
      - db-tier
  
  checking-account:
    build: ./mainframe/checking-account
    container_name: checking-accounts
    env_file:
      - ".env"
    ports:
      - "${CKACCOUNT_SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      account:
        condition: service_started
      mongo:
        condition: service_healthy
    networks:
      - back-tier
      - db-tier
  
  dossier:
    build: ./mainframe/dossier
    container_name: dossiers
    env_file:
      - ".env"
    ports:
      - "${DOSSIER_SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      account:
        condition: service_started
      checking-account:
        condition: service_started
      xchanger:
        condition: service_started
      mongo:
        condition: service_healthy
    networks:
      - back-tier
      - db-tier

  # bff:
  #   build: ./bff
  #   ports:
  #     - "13000:13000"
  #   networks:
  #     - back-tier
  
  mongo:
    image: mongo:8.0.9
    container_name: mongo
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ./mongo/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    #volumes:
    #  - type: bind
    #    source: /Users/andnic/Documents/mongo-data
    #    target: /etc/mongo-data
    networks:
      - db-tier
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  back-tier: {}
  db-tier: {}
